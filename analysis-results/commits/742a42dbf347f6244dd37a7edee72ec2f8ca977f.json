{
  "commit": {
    "hash": "742a42dbf347f6244dd37a7edee72ec2f8ca977f",
    "short_hash": "742a42db",
    "author": {
      "name": "Daniel Rall",
      "email": "dlr@apache.org"
    },
    "committer": {
      "name": "Daniel Rall",
      "email": "dlr@apache.org"
    },
    "date": "2002-07-26T01:14:28+00:00",
    "timestamp": 1027646068,
    "message": "Added myself to commiters list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136944 13f79535-47bb-0310-9956-ffa450edef68",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1
    }
  },
  "java_files": {
    "count": 30,
    "total_lines": 9582,
    "files": [
      {
        "path": "src/java/org/apache/commons/lang/CharRange.java",
        "lines": 205
      },
      {
        "path": "src/java/org/apache/commons/lang/NumberUtils.java",
        "lines": 536
      },
      {
        "path": "src/java/org/apache/commons/lang/ObjectUtils.java",
        "lines": 104
      },
      {
        "path": "src/java/org/apache/commons/lang/CharSetUtils.java",
        "lines": 229
      },
      {
        "path": "src/java/org/apache/commons/lang/CharSet.java",
        "lines": 152
      },
      {
        "path": "src/java/org/apache/commons/lang/RandomStringUtils.java",
        "lines": 253
      },
      {
        "path": "src/java/org/apache/commons/lang/SerializationException.java",
        "lines": 109
      },
      {
        "path": "src/java/org/apache/commons/lang/SerializationUtils.java",
        "lines": 194
      },
      {
        "path": "src/java/org/apache/commons/lang/NumberRange.java",
        "lines": 241
      },
      {
        "path": "src/java/org/apache/commons/lang/StringUtils.java",
        "lines": 1627
      },
      {
        "path": "src/java/org/apache/commons/lang/exception/NestableException.java",
        "lines": 341
      },
      {
        "path": "src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "lines": 288
      },
      {
        "path": "src/java/org/apache/commons/lang/exception/Nestable.java",
        "lines": 190
      },
      {
        "path": "src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "lines": 346
      },
      {
        "path": "src/test/org/apache/commons/lang/ObjectUtilsTest.java",
        "lines": 126
      },
      {
        "path": "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java",
        "lines": 136
      },
      {
        "path": "src/test/org/apache/commons/lang/NumberRangeTest.java",
        "lines": 187
      },
      {
        "path": "src/test/org/apache/commons/lang/LangTestSuite.java",
        "lines": 102
      },
      {
        "path": "src/test/org/apache/commons/lang/CharSetUtilsTest.java",
        "lines": 140
      },
      {
        "path": "src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "lines": 308
      },
      {
        "path": "src/test/org/apache/commons/lang/StringUtilsIsTest.java",
        "lines": 183
      },
      {
        "path": "src/test/org/apache/commons/lang/RandomStringUtilsTest.java",
        "lines": 157
      },
      {
        "path": "src/test/org/apache/commons/lang/StringUtilsTest.java",
        "lines": 344
      },
      {
        "path": "src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "lines": 353
      },
      {
        "path": "src/test/org/apache/commons/lang/StringUtilsSubstringTest.java",
        "lines": 212
      },
      {
        "path": "src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "lines": 203
      },
      {
        "path": "src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "lines": 1156
      },
      {
        "path": "src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "lines": 535
      },
      {
        "path": "src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java",
        "lines": 93
      },
      {
        "path": "src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "lines": 532
      }
    ]
  },
  "pmd_analysis": {
    "violation_count": 423,
    "files_with_violations": 27,
    "rules_violated": [
      "MissingSerialVersionUID",
      "CyclomaticComplexity",
      "UnusedLocalVariable",
      "NPathComplexity",
      "CompareObjectsWithEquals",
      "UseStringBufferForStringAppends",
      "TooManyMethods",
      "AvoidFieldNameMatchingMethodName",
      "InefficientEmptyStringCheck",
      "UnusedPrivateField",
      "AvoidReassigningParameters",
      "OneDeclarationPerLine",
      "MissingOverride",
      "CloseResource",
      "UseLocaleWithCaseConversions",
      "NcssCount",
      "UnnecessaryFullyQualifiedName",
      "ConsecutiveAppendsShouldReuse",
      "ForLoopCanBeForeach",
      "ClassNamingConventions",
      "AvoidDuplicateLiterals",
      "LogicInversion",
      "ClassWithOnlyPrivateConstructorsShouldBeFinal",
      "SuspiciousEqualsMethodName",
      "UnnecessaryModifier",
      "AvoidDeeplyNestedIfStmts",
      "ImmutableField",
      "AvoidCatchingGenericException",
      "LocalVariableNamingConventions",
      "CollapsibleIfStatements",
      "ShortVariable",
      "AssignmentInOperand",
      "SimplifyBooleanReturns",
      "InefficientStringBuffering",
      "AvoidCatchingNPE",
      "AddEmptyString",
      "RedundantFieldInitializer",
      "TestClassWithoutTestCases",
      "AvoidInstantiatingObjectsInLoops",
      "AvoidLiteralsInIfCondition",
      "ConstructorCallsOverridableMethod",
      "ConsecutiveLiteralAppends",
      "AvoidThrowingNullPointerException",
      "FieldNamingConventions",
      "SimplifyBooleanExpressions",
      "NullAssignment",
      "EmptyCatchBlock"
    ],
    "violations": [
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 71,
        "column": 25,
        "end_line": 71,
        "end_column": 30,
        "rule": "FieldNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The static field name 'UNSET' doesn't match '[a-z][a-zA-Z0-9]*'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 132,
        "column": 31,
        "end_line": 132,
        "end_column": 33,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 141,
        "column": 29,
        "end_line": 141,
        "end_column": 31,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 159,
        "column": 33,
        "end_line": 159,
        "end_column": 35,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 192,
        "column": 19,
        "end_line": 192,
        "end_column": 27,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'toString()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 195,
        "column": 13,
        "end_line": 195,
        "end_column": 16,
        "rule": "UseStringBufferForStringAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 197,
        "column": 9,
        "end_line": 197,
        "end_column": 12,
        "rule": "UseStringBufferForStringAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 199,
        "column": 13,
        "end_line": 199,
        "end_column": 16,
        "rule": "UseStringBufferForStringAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java",
        "line": 200,
        "column": 13,
        "end_line": 200,
        "end_column": 16,
        "rule": "UseStringBufferForStringAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 70,
        "column": 24,
        "end_line": 70,
        "end_column": 27,
        "rule": "ImmutableField",
        "ruleset": "Design",
        "priority": 3,
        "message": "Field 'set' may be declared final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 76,
        "column": 13,
        "end_line": 76,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 78,
        "column": 13,
        "end_line": 78,
        "end_column": 24,
        "rule": "ConstructorCallsOverridableMethod",
        "ruleset": "Error Prone",
        "priority": 1,
        "message": "Overridable method called during object construction: CharSet.add(String)"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 88,
        "column": 34,
        "end_line": 88,
        "end_column": 36,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 112,
        "column": 13,
        "end_line": 112,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 115,
        "column": 12,
        "end_line": 115,
        "end_column": 15,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 124,
        "column": 18,
        "end_line": 124,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 125,
        "column": 22,
        "end_line": 125,
        "end_column": 25,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 133,
        "column": 22,
        "end_line": 133,
        "end_column": 25,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 137,
        "column": 21,
        "end_line": 137,
        "end_column": 38,
        "rule": "AvoidInstantiatingObjectsInLoops",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid instantiating new objects inside loops"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java",
        "line": 148,
        "column": 19,
        "end_line": 148,
        "end_column": 27,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'toString()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 111,
        "column": 13,
        "end_line": 111,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 113,
        "column": 14,
        "end_line": 113,
        "end_column": 16,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 117,
        "column": 17,
        "end_line": 119,
        "end_column": 18,
        "rule": "CollapsibleIfStatements",
        "ruleset": "Design",
        "priority": 3,
        "message": "This if statement could be combined with its parent"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 153,
        "column": 13,
        "end_line": 153,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 188,
        "column": 13,
        "end_line": 188,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java",
        "line": 213,
        "column": 13,
        "end_line": 213,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 83,
        "column": 13,
        "end_line": 83,
        "end_column": 66,
        "rule": "AvoidThrowingNullPointerException",
        "ruleset": "Design",
        "priority": 1,
        "message": "Avoid throwing null pointer exceptions."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 101,
        "column": 13,
        "end_line": 101,
        "end_column": 66,
        "rule": "AvoidThrowingNullPointerException",
        "ruleset": "Design",
        "priority": 1,
        "message": "Avoid throwing null pointer exceptions."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 103,
        "column": 13,
        "end_line": 103,
        "end_column": 66,
        "rule": "AvoidThrowingNullPointerException",
        "ruleset": "Design",
        "priority": 1,
        "message": "Avoid throwing null pointer exceptions."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 143,
        "column": 21,
        "end_line": 143,
        "end_column": 63,
        "rule": "LogicInversion",
        "ruleset": "Design",
        "priority": 3,
        "message": "Use opposite operator instead of the logic complement operator."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 144,
        "column": 18,
        "end_line": 144,
        "end_column": 60,
        "rule": "LogicInversion",
        "ruleset": "Design",
        "priority": 3,
        "message": "Use opposite operator instead of the logic complement operator."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 186,
        "column": 20,
        "end_line": 186,
        "end_column": 26,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'equals(Object)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 202,
        "column": 16,
        "end_line": 202,
        "end_column": 24,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'hashCode()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 217,
        "column": 19,
        "end_line": 217,
        "end_column": 27,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'toString()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java",
        "line": 218,
        "column": 22,
        "end_line": 218,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sb"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 67,
        "column": 14,
        "end_line": 67,
        "end_column": 19,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The class 'NumberUtils' has a total cyclomatic complexity of 119 (highest 52)."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 67,
        "column": 32,
        "end_line": 536,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 153,
        "column": 26,
        "end_line": 153,
        "end_column": 38,
        "rule": "NcssCount",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'createNumber(String)' has a NCSS line count of 82."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 153,
        "column": 26,
        "end_line": 153,
        "end_column": 38,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'createNumber(String)' has a cyclomatic complexity of 52."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 153,
        "column": 26,
        "end_line": 153,
        "end_column": 38,
        "rule": "NPathComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'createNumber(String)' has an NPath complexity of 1482, current threshold is 200"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 194,
        "column": 19,
        "end_line": 194,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 200,
        "column": 23,
        "end_line": 200,
        "end_column": 27,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 214,
        "column": 27,
        "end_line": 216,
        "end_column": 26,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 224,
        "column": 31,
        "end_line": 224,
        "end_column": 32,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like f"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 224,
        "column": 35,
        "end_line": 224,
        "end_column": 46,
        "rule": "UnnecessaryFullyQualifiedName",
        "ruleset": "Code Style",
        "priority": 4,
        "message": "Unnecessary qualifier 'NumberUtils': 'createFloat' is already in scope"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 231,
        "column": 23,
        "end_line": 232,
        "end_column": 22,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 237,
        "column": 32,
        "end_line": 237,
        "end_column": 33,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 237,
        "column": 36,
        "end_line": 237,
        "end_column": 47,
        "rule": "UnnecessaryFullyQualifiedName",
        "ruleset": "Code Style",
        "priority": 4,
        "message": "Unnecessary qualifier 'NumberUtils': 'createDouble' is already in scope"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 241,
        "column": 23,
        "end_line": 242,
        "end_column": 22,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 245,
        "column": 23,
        "end_line": 246,
        "end_column": 22,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 258,
        "column": 23,
        "end_line": 258,
        "end_column": 27,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 264,
        "column": 19,
        "end_line": 265,
        "end_column": 18,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 268,
        "column": 19,
        "end_line": 269,
        "end_column": 18,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 276,
        "column": 27,
        "end_line": 276,
        "end_column": 28,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like f"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 280,
        "column": 19,
        "end_line": 281,
        "end_column": 18,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 283,
        "column": 28,
        "end_line": 283,
        "end_column": 29,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 287,
        "column": 19,
        "end_line": 288,
        "end_column": 18,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 303,
        "column": 46,
        "end_line": 303,
        "end_column": 47,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like s"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 308,
        "column": 32,
        "end_line": 308,
        "end_column": 35,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 369,
        "column": 20,
        "end_line": 369,
        "end_column": 22,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like bi"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 381,
        "column": 20,
        "end_line": 381,
        "end_column": 22,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like bd"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 388,
        "column": 35,
        "end_line": 388,
        "end_column": 36,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like a"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 388,
        "column": 42,
        "end_line": 388,
        "end_column": 43,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like b"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 388,
        "column": 49,
        "end_line": 388,
        "end_column": 50,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like c"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 390,
        "column": 13,
        "end_line": 390,
        "end_column": 14,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'a'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 401,
        "column": 35,
        "end_line": 401,
        "end_column": 36,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like a"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 401,
        "column": 42,
        "end_line": 401,
        "end_column": 43,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like b"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 401,
        "column": 49,
        "end_line": 401,
        "end_column": 50,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like c"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 403,
        "column": 13,
        "end_line": 403,
        "end_column": 14,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'a'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 443,
        "column": 27,
        "end_line": 443,
        "end_column": 35,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'isNumber(String)' has a cyclomatic complexity of 43."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 443,
        "column": 27,
        "end_line": 443,
        "end_column": 35,
        "rule": "NPathComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'isNumber(String)' has an NPath complexity of 6102, current threshold is 200"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 448,
        "column": 13,
        "end_line": 448,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 456,
        "column": 13,
        "end_line": 470,
        "end_column": 14,
        "rule": "CollapsibleIfStatements",
        "ruleset": "Design",
        "priority": 3,
        "message": "This if statement could be combined with its parent"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 457,
        "column": 21,
        "end_line": 457,
        "end_column": 22,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like i"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 474,
        "column": 13,
        "end_line": 474,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like i"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java",
        "line": 482,
        "column": 36,
        "end_line": 482,
        "end_column": 39,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/ObjectUtils.java",
        "line": 66,
        "column": 8,
        "end_line": 66,
        "end_column": 13,
        "rule": "ClassWithOnlyPrivateConstructorsShouldBeFinal",
        "ruleset": "Design",
        "priority": 1,
        "message": "This class has only private constructors and may be final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/ObjectUtils.java",
        "line": 93,
        "column": 27,
        "end_line": 93,
        "end_column": 33,
        "rule": "SuspiciousEqualsMethodName",
        "ruleset": "Error Prone",
        "priority": 2,
        "message": "The method name and parameter number are suspiciously close to equals(Object)"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/ObjectUtils.java",
        "line": 96,
        "column": 16,
        "end_line": 101,
        "end_column": 10,
        "rule": "SimplifyBooleanReturns",
        "ruleset": "Design",
        "priority": 3,
        "message": "This if statement can be replaced by `return !{condition} && {elseBranch};`"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 74,
        "column": 8,
        "end_line": 74,
        "end_column": 13,
        "rule": "ClassWithOnlyPrivateConstructorsShouldBeFinal",
        "ruleset": "Design",
        "priority": 1,
        "message": "This class has only private constructors and may be final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 81,
        "column": 33,
        "end_line": 81,
        "end_column": 39,
        "rule": "AvoidFieldNameMatchingMethodName",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Field RANDOM has the same name as a method"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 194,
        "column": 26,
        "end_line": 194,
        "end_column": 32,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'random(int, int, int, boolean, boolean, char[])' has a cyclomatic complexity of 16."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 194,
        "column": 26,
        "end_line": 194,
        "end_column": 32,
        "rule": "NPathComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'random(int, int, int, boolean, boolean, char[])' has an NPath complexity of 465, current threshold is 200"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 196,
        "column": 13,
        "end_line": 196,
        "end_column": 16,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'end'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 197,
        "column": 13,
        "end_line": 197,
        "end_column": 18,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'start'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 207,
        "column": 15,
        "end_line": 207,
        "end_column": 22,
        "rule": "AssignmentInOperand",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid assignments in operands"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 207,
        "column": 15,
        "end_line": 207,
        "end_column": 20,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'count'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java",
        "line": 208,
        "column": 18,
        "end_line": 208,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/SerializationUtils.java",
        "line": 81,
        "column": 8,
        "end_line": 81,
        "end_column": 13,
        "rule": "ClassWithOnlyPrivateConstructorsShouldBeFinal",
        "ruleset": "Design",
        "priority": 1,
        "message": "This class has only private constructors and may be final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/SerializationUtils.java",
        "line": 131,
        "column": 15,
        "end_line": 133,
        "end_column": 14,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/SerializationUtils.java",
        "line": 161,
        "column": 27,
        "end_line": 161,
        "end_column": 29,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like in"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/SerializationUtils.java",
        "line": 176,
        "column": 15,
        "end_line": 178,
        "end_column": 14,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 85,
        "column": 8,
        "end_line": 85,
        "end_column": 13,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The class 'StringUtils' has a total cyclomatic complexity of 231 (highest 15)."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 85,
        "column": 8,
        "end_line": 85,
        "end_column": 13,
        "rule": "ClassWithOnlyPrivateConstructorsShouldBeFinal",
        "ruleset": "Design",
        "priority": 1,
        "message": "This class has only private constructors and may be final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 85,
        "column": 26,
        "end_line": 1625,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 90,
        "column": 23,
        "end_line": 90,
        "end_column": 39,
        "rule": "FieldNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The static field name 'CHAR_BUFFER_SIZE' doesn't match '[a-z][a-zA-Z0-9]*'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 151,
        "column": 32,
        "end_line": 151,
        "end_column": 51,
        "rule": "InefficientEmptyStringCheck",
        "ruleset": "Performance",
        "priority": 3,
        "message": "String.trim().length() == 0 / String.trim().isEmpty() is an inefficient way to validate a blank String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 195,
        "column": 13,
        "end_line": 195,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 227,
        "column": 13,
        "end_line": 227,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 259,
        "column": 13,
        "end_line": 259,
        "end_column": 18,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'start'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 291,
        "column": 13,
        "end_line": 291,
        "end_column": 16,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'end'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 294,
        "column": 13,
        "end_line": 294,
        "end_column": 18,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'start'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 447,
        "column": 13,
        "end_line": 447,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like i"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 453,
        "column": 36,
        "end_line": 453,
        "end_column": 107,
        "rule": "AvoidInstantiatingObjectsInLoops",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid instantiating new objects inside loops"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 495,
        "column": 13,
        "end_line": 495,
        "end_column": 22,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'separator'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 523,
        "column": 13,
        "end_line": 523,
        "end_column": 22,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'separator'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 586,
        "column": 13,
        "end_line": 586,
        "end_column": 18,
        "rule": "OneDeclarationPerLine",
        "ruleset": "Best Practices",
        "priority": 4,
        "message": "Use one line for each declaration, it enhances code readability."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 587,
        "column": 17,
        "end_line": 587,
        "end_column": 50,
        "rule": "AssignmentInOperand",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid assignments in operands"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 591,
        "column": 17,
        "end_line": 591,
        "end_column": 22,
        "rule": "AssignmentInOperand",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid assignments in operands"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 591,
        "column": 19,
        "end_line": 591,
        "end_column": 22,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'max'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 641,
        "column": 13,
        "end_line": 641,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 642,
        "column": 13,
        "end_line": 642,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like p"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 643,
        "column": 17,
        "end_line": 643,
        "end_column": 18,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 646,
        "column": 9,
        "end_line": 646,
        "end_column": 12,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'str'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 775,
        "column": 13,
        "end_line": 775,
        "end_column": 15,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 778,
        "column": 29,
        "end_line": 778,
        "end_column": 30,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 784,
        "column": 21,
        "end_line": 784,
        "end_column": 25,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 785,
        "column": 13,
        "end_line": 787,
        "end_column": 14,
        "rule": "CollapsibleIfStatements",
        "ruleset": "Design",
        "priority": 3,
        "message": "This if statement could be combined with its parent"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 785,
        "column": 44,
        "end_line": 785,
        "end_column": 48,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 803,
        "column": 20,
        "end_line": 803,
        "end_column": 24,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 804,
        "column": 41,
        "end_line": 804,
        "end_column": 45,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 828,
        "column": 26,
        "end_line": 828,
        "end_column": 32,
        "rule": "NcssCount",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'escape(String)' has a NCSS line count of 60."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 828,
        "column": 26,
        "end_line": 828,
        "end_column": 32,
        "rule": "CyclomaticComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'escape(String)' has a cyclomatic complexity of 15."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 829,
        "column": 13,
        "end_line": 829,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 832,
        "column": 18,
        "end_line": 832,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 835,
        "column": 21,
        "end_line": 835,
        "end_column": 26,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 836,
        "column": 31,
        "end_line": 836,
        "end_column": 60,
        "rule": "InefficientStringBuffering",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 838,
        "column": 21,
        "end_line": 838,
        "end_column": 25,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 839,
        "column": 31,
        "end_line": 839,
        "end_column": 61,
        "rule": "InefficientStringBuffering",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 841,
        "column": 21,
        "end_line": 841,
        "end_column": 25,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 842,
        "column": 31,
        "end_line": 842,
        "end_column": 62,
        "rule": "InefficientStringBuffering",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 844,
        "column": 21,
        "end_line": 844,
        "end_column": 23,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 847,
        "column": 25,
        "end_line": 847,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 847,
        "column": 39,
        "end_line": 847,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 851,
        "column": 25,
        "end_line": 851,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 851,
        "column": 39,
        "end_line": 851,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 855,
        "column": 25,
        "end_line": 855,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 855,
        "column": 39,
        "end_line": 855,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 859,
        "column": 25,
        "end_line": 859,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 859,
        "column": 39,
        "end_line": 859,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 863,
        "column": 25,
        "end_line": 863,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 863,
        "column": 39,
        "end_line": 863,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 867,
        "column": 34,
        "end_line": 867,
        "end_column": 37,
        "rule": "AvoidLiteralsInIfCondition",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid using literals in if statements"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 868,
        "column": 43,
        "end_line": 868,
        "end_column": 74,
        "rule": "InefficientStringBuffering",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 870,
        "column": 43,
        "end_line": 870,
        "end_column": 75,
        "rule": "InefficientStringBuffering",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append()."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 877,
        "column": 25,
        "end_line": 877,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 877,
        "column": 39,
        "end_line": 877,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 881,
        "column": 25,
        "end_line": 881,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 881,
        "column": 39,
        "end_line": 881,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 885,
        "column": 25,
        "end_line": 885,
        "end_column": 45,
        "rule": "ConsecutiveAppendsShouldReuse",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 885,
        "column": 39,
        "end_line": 885,
        "end_column": 43,
        "rule": "ConsecutiveLiteralAppends",
        "ruleset": "Performance",
        "priority": 3,
        "message": "StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 934,
        "column": 9,
        "end_line": 934,
        "end_column": 13,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'size'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 936,
        "column": 13,
        "end_line": 936,
        "end_column": 16,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'str'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 958,
        "column": 9,
        "end_line": 958,
        "end_column": 13,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'size'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 960,
        "column": 13,
        "end_line": 960,
        "end_column": 16,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'str'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 987,
        "column": 9,
        "end_line": 987,
        "end_column": 12,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'str'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1014,
        "column": 13,
        "end_line": 1014,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1063,
        "column": 13,
        "end_line": 1063,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1070,
        "column": 18,
        "end_line": 1070,
        "end_column": 21,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'chr'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1091,
        "column": 16,
        "end_line": 1091,
        "end_column": 33,
        "rule": "UseLocaleWithCaseConversions",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1104,
        "column": 16,
        "end_line": 1104,
        "end_column": 33,
        "rule": "UseLocaleWithCaseConversions",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "When doing a String.toLowerCase()/toUpperCase() call, use a Locale"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1159,
        "column": 13,
        "end_line": 1159,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1163,
        "column": 14,
        "end_line": 1163,
        "end_column": 16,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1201,
        "column": 13,
        "end_line": 1201,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1205,
        "column": 18,
        "end_line": 1205,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ch"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1270,
        "column": 16,
        "end_line": 1270,
        "end_column": 45,
        "rule": "AssignmentInOperand",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid assignments in operands"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1291,
        "column": 13,
        "end_line": 1291,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1293,
        "column": 54,
        "end_line": 1293,
        "end_column": 59,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1311,
        "column": 13,
        "end_line": 1311,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1313,
        "column": 55,
        "end_line": 1313,
        "end_column": 60,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1332,
        "column": 13,
        "end_line": 1332,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1334,
        "column": 61,
        "end_line": 1334,
        "end_column": 66,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1352,
        "column": 13,
        "end_line": 1352,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1354,
        "column": 62,
        "end_line": 1354,
        "end_column": 67,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1373,
        "column": 13,
        "end_line": 1373,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1375,
        "column": 53,
        "end_line": 1375,
        "end_column": 58,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1393,
        "column": 13,
        "end_line": 1393,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1395,
        "column": 54,
        "end_line": 1395,
        "end_column": 59,
        "rule": "SimplifyBooleanExpressions",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid unnecessary comparisons in boolean expressions"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1467,
        "column": 13,
        "end_line": 1467,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like i"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1468,
        "column": 13,
        "end_line": 1468,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like j"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1501,
        "column": 11,
        "end_line": 1503,
        "end_column": 10,
        "rule": "EmptyCatchBlock",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid empty catch blocks"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1501,
        "column": 18,
        "end_line": 1501,
        "end_column": 27,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1515,
        "column": 53,
        "end_line": 1515,
        "end_column": 54,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like s"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1515,
        "column": 63,
        "end_line": 1515,
        "end_column": 64,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1516,
        "column": 13,
        "end_line": 1516,
        "end_column": 18,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1517,
        "column": 13,
        "end_line": 1517,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1518,
        "column": 13,
        "end_line": 1518,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like m"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1519,
        "column": 13,
        "end_line": 1519,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like i"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1520,
        "column": 13,
        "end_line": 1520,
        "end_column": 14,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like j"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1521,
        "column": 14,
        "end_line": 1521,
        "end_column": 17,
        "rule": "LocalVariableNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The local variable name 's_i' doesn't match '[a-z][a-zA-Z0-9]*'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1522,
        "column": 14,
        "end_line": 1522,
        "end_column": 17,
        "rule": "LocalVariableNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The local variable name 't_j' doesn't match '[a-z][a-zA-Z0-9]*'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1606,
        "column": 27,
        "end_line": 1606,
        "end_column": 29,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like in"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java",
        "line": 1611,
        "column": 16,
        "end_line": 1611,
        "end_column": 59,
        "rule": "AssignmentInOperand",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid assignments in operands"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 75,
        "column": 22,
        "end_line": 75,
        "end_column": 30,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getCause': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 81,
        "column": 16,
        "end_line": 81,
        "end_column": 25,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getLength': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 89,
        "column": 19,
        "end_line": 89,
        "end_column": 29,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getMessage': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 103,
        "column": 19,
        "end_line": 103,
        "end_column": 29,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getMessage': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 113,
        "column": 21,
        "end_line": 113,
        "end_column": 32,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getMessages': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 126,
        "column": 22,
        "end_line": 126,
        "end_column": 34,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getThrowable': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 136,
        "column": 24,
        "end_line": 136,
        "end_column": 37,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'getThrowables': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 150,
        "column": 16,
        "end_line": 150,
        "end_column": 32,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'indexOfThrowable': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 168,
        "column": 16,
        "end_line": 168,
        "end_column": 32,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'indexOfThrowable': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 177,
        "column": 17,
        "end_line": 177,
        "end_column": 32,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'printStackTrace': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java",
        "line": 189,
        "column": 17,
        "end_line": 189,
        "end_column": 39,
        "rule": "UnnecessaryModifier",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Unnecessary modifier 'public' on method 'printPartialStackTrace': the method is declared in an interface type"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 73,
        "column": 1,
        "end_line": 346,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 85,
        "column": 22,
        "end_line": 85,
        "end_column": 27,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 85,
        "column": 22,
        "end_line": 85,
        "end_column": 27,
        "rule": "ImmutableField",
        "ruleset": "Design",
        "priority": 3,
        "message": "Field 'cause' may be declared final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 111,
        "column": 16,
        "end_line": 111,
        "end_column": 19,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'msg'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 116,
        "column": 19,
        "end_line": 116,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 126,
        "column": 21,
        "end_line": 126,
        "end_column": 25,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 168,
        "column": 19,
        "end_line": 168,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 184,
        "column": 13,
        "end_line": 184,
        "end_column": 18,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'index'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 206,
        "column": 23,
        "end_line": 206,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 216,
        "column": 25,
        "end_line": 216,
        "end_column": 29,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 236,
        "column": 9,
        "end_line": 236,
        "end_column": 12,
        "rule": "AvoidReassigningParameters",
        "ruleset": "Best Practices",
        "priority": 2,
        "message": "Avoid reassigning parameters such as 'pos'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 270,
        "column": 25,
        "end_line": 270,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like pw"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 286,
        "column": 22,
        "end_line": 286,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like st"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 298,
        "column": 21,
        "end_line": 301,
        "end_column": 22,
        "rule": "ForLoopCanBeForeach",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "This for loop can be replaced by a foreach loop"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 307,
        "column": 13,
        "end_line": 310,
        "end_column": 14,
        "rule": "ForLoopCanBeForeach",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "This for loop can be replaced by a foreach loop"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 321,
        "column": 42,
        "end_line": 321,
        "end_column": 43,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 323,
        "column": 22,
        "end_line": 323,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sw"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 324,
        "column": 21,
        "end_line": 324,
        "end_column": 23,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like pw"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java",
        "line": 337,
        "column": 25,
        "end_line": 337,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like st"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 130,
        "column": 8,
        "end_line": 130,
        "end_column": 13,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 142,
        "column": 23,
        "end_line": 142,
        "end_column": 28,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 194,
        "column": 22,
        "end_line": 194,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 211,
        "column": 19,
        "end_line": 211,
        "end_column": 29,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getMessage()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 224,
        "column": 17,
        "end_line": 227,
        "end_column": 18,
        "rule": "AvoidDeeplyNestedIfStmts",
        "ruleset": "Design",
        "priority": 3,
        "message": "Deeply nested if..then statements are hard to read"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 310,
        "column": 17,
        "end_line": 310,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 320,
        "column": 17,
        "end_line": 320,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintStream)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java",
        "line": 328,
        "column": 17,
        "end_line": 328,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintWriter)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 76,
        "column": 8,
        "end_line": 76,
        "end_column": 13,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 89,
        "column": 23,
        "end_line": 89,
        "end_column": 28,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 141,
        "column": 22,
        "end_line": 141,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 158,
        "column": 19,
        "end_line": 158,
        "end_column": 29,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getMessage()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 171,
        "column": 17,
        "end_line": 174,
        "end_column": 18,
        "rule": "AvoidDeeplyNestedIfStmts",
        "ruleset": "Design",
        "priority": 3,
        "message": "Deeply nested if..then statements are hard to read"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 257,
        "column": 17,
        "end_line": 257,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 267,
        "column": 17,
        "end_line": 267,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintStream)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java",
        "line": 275,
        "column": 17,
        "end_line": 275,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintWriter)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/CharSetUtilsTest.java",
        "line": 98,
        "column": 22,
        "end_line": 98,
        "end_column": 55,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"squeeze(String,String[]) failed\" appears 5 times in this file; the first occurrence is on line 98"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/CharSetUtilsTest.java",
        "line": 99,
        "column": 51,
        "end_line": 99,
        "end_column": 58,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"hello\" appears 14 times in this file; the first occurrence is on line 99"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/CharSetUtilsTest.java",
        "line": 112,
        "column": 22,
        "end_line": 112,
        "end_column": 53,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"count(String,String[]) failed\" appears 6 times in this file; the first occurrence is on line 112"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/CharSetUtilsTest.java",
        "line": 128,
        "column": 22,
        "end_line": 128,
        "end_column": 54,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"delete(String,String[]) failed\" appears 5 times in this file; the first occurrence is on line 128"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/LangTestSuite.java",
        "line": 67,
        "column": 8,
        "end_line": 67,
        "end_column": 13,
        "rule": "TestClassWithoutTestCases",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The class 'LangTestSuite' might be a test class, but it contains no test cases."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/LangTestSuite.java",
        "line": 67,
        "column": 8,
        "end_line": 67,
        "end_column": 13,
        "rule": "ClassNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The class name 'LangTestSuite' doesn't match '^Test.*$|^[A-Z][a-zA-Z0-9]*Test(s|Case)?$'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 71,
        "column": 47,
        "end_line": 308,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 89,
        "column": 76,
        "end_line": 89,
        "end_column": 83,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"12345\" appears 12 times in this file; the first occurrence is on line 89"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 98,
        "column": 80,
        "end_line": 98,
        "end_column": 88,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"1234.5\" appears 13 times in this file; the first occurrence is on line 98"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 107,
        "column": 114,
        "end_line": 107,
        "end_column": 143,
        "rule": "AddEmptyString",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Do not add empty strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 188,
        "column": 17,
        "end_line": 188,
        "end_column": 29,
        "rule": "NcssCount",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'testIsNumber()' has a NCSS line count of 103."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 249,
        "column": 15,
        "end_line": 249,
        "end_column": 19,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 297,
        "column": 13,
        "end_line": 299,
        "end_column": 14,
        "rule": "SimplifyBooleanReturns",
        "ruleset": "Design",
        "priority": 3,
        "message": "This if statement can be replaced by `return !{condition};`"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 303,
        "column": 18,
        "end_line": 303,
        "end_column": 38,
        "rule": "AvoidCatchingNPE",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid catching NullPointerException; consider removing the cause of the NPE."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java",
        "line": 303,
        "column": 18,
        "end_line": 303,
        "end_column": 38,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/ObjectUtilsTest.java",
        "line": 105,
        "column": 16,
        "end_line": 105,
        "end_column": 17,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like o"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/RandomStringUtilsTest.java",
        "line": 95,
        "column": 17,
        "end_line": 95,
        "end_column": 38,
        "rule": "NPathComplexity",
        "ruleset": "Design",
        "priority": 3,
        "message": "The method 'testRandomStringUtils()' has an NPath complexity of 216, current threshold is 200"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/RandomStringUtilsTest.java",
        "line": 96,
        "column": 16,
        "end_line": 96,
        "end_column": 18,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like r1"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/RandomStringUtilsTest.java",
        "line": 98,
        "column": 16,
        "end_line": 98,
        "end_column": 18,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like r2"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/RandomStringUtilsTest.java",
        "line": 100,
        "column": 20,
        "end_line": 100,
        "end_column": 36,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"!r1.equals(r2)\" appears 7 times in this file; the first occurrence is on line 100"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 75,
        "column": 54,
        "end_line": 353,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 100,
        "column": 18,
        "end_line": 100,
        "end_column": 23,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"FOO\" appears 7 times in this file; the first occurrence is on line 100"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 101,
        "column": 18,
        "end_line": 101,
        "end_column": 23,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"BAR\" appears 7 times in this file; the first occurrence is on line 101"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 158,
        "column": 31,
        "end_line": 158,
        "end_column": 41,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'streamTest'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 161,
        "column": 18,
        "end_line": 161,
        "end_column": 38,
        "rule": "AvoidCatchingNPE",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid catching NullPointerException; consider removing the cause of the NPE."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 161,
        "column": 18,
        "end_line": 161,
        "end_column": 38,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 168,
        "column": 31,
        "end_line": 168,
        "end_column": 41,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'streamTest'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 171,
        "column": 18,
        "end_line": 171,
        "end_column": 38,
        "rule": "AvoidCatchingNPE",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid catching NullPointerException; consider removing the cause of the NPE."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 171,
        "column": 18,
        "end_line": 171,
        "end_column": 38,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 190,
        "column": 20,
        "end_line": 190,
        "end_column": 32,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 193,
        "column": 20,
        "end_line": 193,
        "end_column": 49,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 195,
        "column": 20,
        "end_line": 195,
        "end_column": 50,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 214,
        "column": 18,
        "end_line": 214,
        "end_column": 38,
        "rule": "AvoidCatchingNPE",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid catching NullPointerException; consider removing the cause of the NPE."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 214,
        "column": 18,
        "end_line": 214,
        "end_column": 38,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 285,
        "column": 20,
        "end_line": 285,
        "end_column": 32,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 288,
        "column": 20,
        "end_line": 288,
        "end_column": 49,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 290,
        "column": 20,
        "end_line": 290,
        "end_column": 50,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 308,
        "column": 18,
        "end_line": 308,
        "end_column": 38,
        "rule": "AvoidCatchingNPE",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Avoid catching NullPointerException; consider removing the cause of the NPE."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 308,
        "column": 18,
        "end_line": 308,
        "end_column": 38,
        "rule": "AvoidCatchingGenericException",
        "ruleset": "Design",
        "priority": 3,
        "message": "Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 329,
        "column": 20,
        "end_line": 329,
        "end_column": 32,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 332,
        "column": 20,
        "end_line": 332,
        "end_column": 49,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java",
        "line": 334,
        "column": 20,
        "end_line": 334,
        "end_column": 50,
        "rule": "CompareObjectsWithEquals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Use equals() to compare object references."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsIsTest.java",
        "line": 99,
        "column": 48,
        "end_line": 99,
        "end_column": 80,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl\" appears 6 times in this file; the first occurrence is on line 99"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsIsTest.java",
        "line": 100,
        "column": 49,
        "end_line": 100,
        "end_column": 58,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ham kso\" appears 6 times in this file; the first occurrence is on line 100"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsIsTest.java",
        "line": 102,
        "column": 49,
        "end_line": 102,
        "end_column": 83,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"hkHKHik6iUGHKJgU7tUJgKJGI87GIkug\" appears 6 times in this file; the first occurrence is on line 102"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsIsTest.java",
        "line": 104,
        "column": 49,
        "end_line": 104,
        "end_column": 65,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"hkHKHik*khbkuh\" appears 6 times in this file; the first occurrence is on line 104"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsSubstringTest.java",
        "line": 68,
        "column": 56,
        "end_line": 212,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java",
        "line": 73,
        "column": 1,
        "end_line": 343,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java",
        "line": 83,
        "column": 33,
        "end_line": 83,
        "end_column": 42,
        "rule": "UnusedPrivateField",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused private fields such as 'UPPER_FOO'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java",
        "line": 243,
        "column": 56,
        "end_line": 243,
        "end_column": 62,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"1234\" appears 4 times in this file; the first occurrence is on line 243"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java",
        "line": 308,
        "column": 22,
        "end_line": 308,
        "end_column": 45,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"escape(String) failed\" appears 7 times in this file; the first occurrence is on line 308"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java",
        "line": 331,
        "column": 22,
        "end_line": 331,
        "end_column": 69,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"getLevenshteinDistance(String, String) failed\" appears 5 times in this file; the first occurrence is on line 331"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 99,
        "column": 45,
        "end_line": 99,
        "end_column": 53,
        "rule": "AddEmptyString",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Do not add empty strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 107,
        "column": 44,
        "end_line": 107,
        "end_column": 52,
        "rule": "AddEmptyString",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Do not add empty strings"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 138,
        "column": 28,
        "end_line": 138,
        "end_column": 34,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"    \" appears 4 times in this file; the first occurrence is on line 138"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 186,
        "column": 45,
        "end_line": 186,
        "end_column": 47,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like o1"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 186,
        "column": 58,
        "end_line": 186,
        "end_column": 60,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like o2"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java",
        "line": 192,
        "column": 13,
        "end_line": 192,
        "end_column": 15,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like sz"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java",
        "line": 67,
        "column": 8,
        "end_line": 67,
        "end_column": 13,
        "rule": "TestClassWithoutTestCases",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The class 'ExceptionTestSuite' might be a test class, but it contains no test cases."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java",
        "line": 67,
        "column": 8,
        "end_line": 67,
        "end_column": 13,
        "rule": "ClassNamingConventions",
        "ruleset": "Code Style",
        "priority": 1,
        "message": "The class name 'ExceptionTestSuite' doesn't match '^Test.*$|^[A-Z][a-zA-Z0-9]*Test(s|Case)?$'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 71,
        "column": 1,
        "end_line": 483,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 106,
        "column": 25,
        "end_line": 106,
        "end_column": 29,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 118,
        "column": 30,
        "end_line": 118,
        "end_column": 47,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'nonThrowableCause'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 132,
        "column": 30,
        "end_line": 132,
        "end_column": 33,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'nd1'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 158,
        "column": 18,
        "end_line": 158,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 159,
        "column": 26,
        "end_line": 159,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 165,
        "column": 41,
        "end_line": 165,
        "end_column": 50,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 1\" appears 8 times in this file; the first occurrence is on line 165"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 173,
        "column": 55,
        "end_line": 173,
        "end_column": 64,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 2\" appears 10 times in this file; the first occurrence is on line 173"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 177,
        "column": 147,
        "end_line": 177,
        "end_column": 156,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 4\" appears 6 times in this file; the first occurrence is on line 177"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 177,
        "column": 172,
        "end_line": 177,
        "end_column": 181,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 5\" appears 6 times in this file; the first occurrence is on line 177"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 182,
        "column": 63,
        "end_line": 182,
        "end_column": 64,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 190,
        "column": 18,
        "end_line": 190,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 191,
        "column": 26,
        "end_line": 191,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 211,
        "column": 19,
        "end_line": 211,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 220,
        "column": 19,
        "end_line": 220,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 228,
        "column": 65,
        "end_line": 228,
        "end_column": 66,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 241,
        "column": 18,
        "end_line": 241,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 242,
        "column": 26,
        "end_line": 242,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 246,
        "column": 19,
        "end_line": 246,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 261,
        "column": 18,
        "end_line": 261,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 262,
        "column": 26,
        "end_line": 262,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 267,
        "column": 19,
        "end_line": 267,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 279,
        "column": 19,
        "end_line": 279,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 293,
        "column": 66,
        "end_line": 293,
        "end_column": 67,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 295,
        "column": 19,
        "end_line": 295,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 310,
        "column": 26,
        "end_line": 310,
        "end_column": 45,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"throwable message\" appears 4 times in this file; the first occurrence is on line 310"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 338,
        "column": 18,
        "end_line": 338,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 339,
        "column": 26,
        "end_line": 339,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 344,
        "column": 19,
        "end_line": 344,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 356,
        "column": 19,
        "end_line": 356,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 370,
        "column": 67,
        "end_line": 370,
        "end_column": 68,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 380,
        "column": 23,
        "end_line": 380,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 395,
        "column": 18,
        "end_line": 395,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 396,
        "column": 26,
        "end_line": 396,
        "end_column": 27,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 403,
        "column": 19,
        "end_line": 403,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 424,
        "column": 70,
        "end_line": 424,
        "end_column": 71,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like d"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 426,
        "column": 19,
        "end_line": 426,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 485,
        "column": 1,
        "end_line": 485,
        "end_column": 6,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 487,
        "column": 23,
        "end_line": 487,
        "end_column": 28,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 583,
        "column": 22,
        "end_line": 583,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 649,
        "column": 1,
        "end_line": 649,
        "end_column": 6,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 651,
        "column": 23,
        "end_line": 651,
        "end_column": 28,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 747,
        "column": 22,
        "end_line": 747,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 813,
        "column": 1,
        "end_line": 813,
        "end_column": 6,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 815,
        "column": 23,
        "end_line": 815,
        "end_column": 28,
        "rule": "ImmutableField",
        "ruleset": "Design",
        "priority": 3,
        "message": "Field 'cause' may be declared final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 832,
        "column": 19,
        "end_line": 832,
        "end_column": 29,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getMessage()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 871,
        "column": 22,
        "end_line": 871,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 883,
        "column": 17,
        "end_line": 883,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintWriter)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 939,
        "column": 1,
        "end_line": 939,
        "end_column": 6,
        "rule": "MissingSerialVersionUID",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Classes implementing Serializable should set a serialVersionUID"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 941,
        "column": 23,
        "end_line": 941,
        "end_column": 28,
        "rule": "RedundantFieldInitializer",
        "ruleset": "Performance",
        "priority": 3,
        "message": "Avoid using redundant field initializer for 'cause'"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 941,
        "column": 23,
        "end_line": 941,
        "end_column": 28,
        "rule": "ImmutableField",
        "ruleset": "Design",
        "priority": 3,
        "message": "Field 'cause' may be declared final"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 959,
        "column": 19,
        "end_line": 959,
        "end_column": 29,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getMessage()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 986,
        "column": 22,
        "end_line": 986,
        "end_column": 30,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'getCause()' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java",
        "line": 998,
        "column": 17,
        "end_line": 998,
        "end_column": 32,
        "rule": "MissingOverride",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "The method 'printStackTrace(PrintWriter)' is missing an @Override annotation."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 70,
        "column": 1,
        "end_line": 486,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 107,
        "column": 55,
        "end_line": 107,
        "end_column": 60,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne2\" appears 4 times in this file; the first occurrence is on line 107"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 110,
        "column": 69,
        "end_line": 110,
        "end_column": 84,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne3 exception\" appears 4 times in this file; the first occurrence is on line 110"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 120,
        "column": 55,
        "end_line": 120,
        "end_column": 60,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne5\" appears 4 times in this file; the first occurrence is on line 120"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 124,
        "column": 75,
        "end_line": 124,
        "end_column": 90,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne6 exception\" appears 4 times in this file; the first occurrence is on line 124"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 152,
        "column": 55,
        "end_line": 152,
        "end_column": 64,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 1\" appears 7 times in this file; the first occurrence is on line 152"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 152,
        "column": 88,
        "end_line": 152,
        "end_column": 97,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 2\" appears 9 times in this file; the first occurrence is on line 152"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 152,
        "column": 143,
        "end_line": 152,
        "end_column": 152,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 4\" appears 7 times in this file; the first occurrence is on line 152"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 152,
        "column": 168,
        "end_line": 152,
        "end_column": 177,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 5\" appears 7 times in this file; the first occurrence is on line 152"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 198,
        "column": 19,
        "end_line": 198,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 201,
        "column": 27,
        "end_line": 201,
        "end_column": 29,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ne"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 215,
        "column": 19,
        "end_line": 215,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 218,
        "column": 27,
        "end_line": 218,
        "end_column": 29,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ne"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 229,
        "column": 18,
        "end_line": 229,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 234,
        "column": 19,
        "end_line": 234,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 245,
        "column": 19,
        "end_line": 245,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 258,
        "column": 59,
        "end_line": 258,
        "end_column": 60,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 260,
        "column": 19,
        "end_line": 260,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 275,
        "column": 26,
        "end_line": 275,
        "end_column": 45,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"throwable message\" appears 4 times in this file; the first occurrence is on line 275"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 303,
        "column": 18,
        "end_line": 303,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 308,
        "column": 19,
        "end_line": 308,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 319,
        "column": 19,
        "end_line": 319,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 332,
        "column": 60,
        "end_line": 332,
        "end_column": 61,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 341,
        "column": 23,
        "end_line": 341,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 356,
        "column": 18,
        "end_line": 356,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 363,
        "column": 19,
        "end_line": 363,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 381,
        "column": 63,
        "end_line": 381,
        "end_column": 64,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 383,
        "column": 19,
        "end_line": 383,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 405,
        "column": 18,
        "end_line": 405,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 412,
        "column": 19,
        "end_line": 412,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 432,
        "column": 64,
        "end_line": 432,
        "end_column": 65,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 434,
        "column": 19,
        "end_line": 434,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 459,
        "column": 21,
        "end_line": 459,
        "end_column": 24,
        "rule": "CloseResource",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Ensure that resources like this PrintWriter object are closed after use"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 473,
        "column": 21,
        "end_line": 473,
        "end_column": 24,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'pw1'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java",
        "line": 473,
        "column": 21,
        "end_line": 473,
        "end_column": 24,
        "rule": "CloseResource",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Ensure that resources like this PrintWriter object are closed after use"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 70,
        "column": 1,
        "end_line": 484,
        "end_column": 2,
        "rule": "TooManyMethods",
        "ruleset": "Design",
        "priority": 3,
        "message": "This class has too many methods, consider refactoring it."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 106,
        "column": 69,
        "end_line": 106,
        "end_column": 74,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne2\" appears 4 times in this file; the first occurrence is on line 106"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 109,
        "column": 83,
        "end_line": 109,
        "end_column": 98,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne3 exception\" appears 4 times in this file; the first occurrence is on line 109"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 119,
        "column": 69,
        "end_line": 119,
        "end_column": 74,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne5\" appears 4 times in this file; the first occurrence is on line 119"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 123,
        "column": 89,
        "end_line": 123,
        "end_column": 104,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"ne6 exception\" appears 4 times in this file; the first occurrence is on line 123"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 151,
        "column": 69,
        "end_line": 151,
        "end_column": 78,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 1\" appears 7 times in this file; the first occurrence is on line 151"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 151,
        "column": 109,
        "end_line": 151,
        "end_column": 118,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 2\" appears 9 times in this file; the first occurrence is on line 151"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 151,
        "column": 178,
        "end_line": 151,
        "end_column": 187,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 4\" appears 7 times in this file; the first occurrence is on line 151"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 151,
        "column": 203,
        "end_line": 151,
        "end_column": 212,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"level 5\" appears 7 times in this file; the first occurrence is on line 151"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 196,
        "column": 19,
        "end_line": 196,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 199,
        "column": 34,
        "end_line": 199,
        "end_column": 36,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ne"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 213,
        "column": 19,
        "end_line": 213,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 216,
        "column": 34,
        "end_line": 216,
        "end_column": 36,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like ne"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 227,
        "column": 18,
        "end_line": 227,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 232,
        "column": 19,
        "end_line": 232,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 243,
        "column": 19,
        "end_line": 243,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 256,
        "column": 66,
        "end_line": 256,
        "end_column": 67,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 258,
        "column": 19,
        "end_line": 258,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 273,
        "column": 26,
        "end_line": 273,
        "end_column": 45,
        "rule": "AvoidDuplicateLiterals",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "The String literal \"throwable message\" appears 4 times in this file; the first occurrence is on line 273"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 301,
        "column": 18,
        "end_line": 301,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 306,
        "column": 19,
        "end_line": 306,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 317,
        "column": 19,
        "end_line": 317,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 330,
        "column": 67,
        "end_line": 330,
        "end_column": 68,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 339,
        "column": 23,
        "end_line": 339,
        "end_column": 24,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 354,
        "column": 18,
        "end_line": 354,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 361,
        "column": 19,
        "end_line": 361,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 379,
        "column": 70,
        "end_line": 379,
        "end_column": 71,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 381,
        "column": 19,
        "end_line": 381,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 403,
        "column": 18,
        "end_line": 403,
        "end_column": 19,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 410,
        "column": 19,
        "end_line": 410,
        "end_column": 23,
        "rule": "NullAssignment",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Assigning an Object to null is a code smell.  Consider refactoring."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 430,
        "column": 71,
        "end_line": 430,
        "end_column": 72,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like n"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 432,
        "column": 19,
        "end_line": 432,
        "end_column": 20,
        "rule": "ShortVariable",
        "ruleset": "Code Style",
        "priority": 3,
        "message": "Avoid variables with short names like t"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 457,
        "column": 21,
        "end_line": 457,
        "end_column": 24,
        "rule": "UnusedLocalVariable",
        "ruleset": "Best Practices",
        "priority": 3,
        "message": "Avoid unused local variables such as 'pw1'."
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 457,
        "column": 21,
        "end_line": 457,
        "end_column": 24,
        "rule": "CloseResource",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Ensure that resources like this PrintWriter object are closed after use"
      },
      {
        "file": "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java",
        "line": 471,
        "column": 21,
        "end_line": 471,
        "end_column": 24,
        "rule": "CloseResource",
        "ruleset": "Error Prone",
        "priority": 3,
        "message": "Ensure that resources like this PrintWriter object are closed after use"
      }
    ]
  },
  "statistics": {
    "violations_per_file": 14.1,
    "violations_per_1000_lines": 44.14527238572323,
    "files_with_violations_ratio": 0.9,
    "average_lines_per_file": 319.4,
    "violation_by_priority": {
      "1": 14,
      "3": 386,
      "4": 3,
      "2": 20
    },
    "rule_frequency": {
      "MissingSerialVersionUID": 6,
      "CyclomaticComplexity": 6,
      "UnusedLocalVariable": 8,
      "NPathComplexity": 4,
      "CompareObjectsWithEquals": 9,
      "UseStringBufferForStringAppends": 4,
      "TooManyMethods": 10,
      "AvoidFieldNameMatchingMethodName": 1,
      "InefficientEmptyStringCheck": 1,
      "UnusedPrivateField": 1,
      "AvoidReassigningParameters": 19,
      "OneDeclarationPerLine": 1,
      "MissingOverride": 23,
      "CloseResource": 4,
      "UseLocaleWithCaseConversions": 2,
      "NcssCount": 3,
      "UnnecessaryFullyQualifiedName": 2,
      "ConsecutiveAppendsShouldReuse": 8,
      "ForLoopCanBeForeach": 2,
      "ClassNamingConventions": 2,
      "AvoidDuplicateLiterals": 40,
      "LogicInversion": 2,
      "ClassWithOnlyPrivateConstructorsShouldBeFinal": 4,
      "SuspiciousEqualsMethodName": 1,
      "UnnecessaryModifier": 11,
      "AvoidDeeplyNestedIfStmts": 2,
      "ImmutableField": 4,
      "AvoidCatchingGenericException": 6,
      "LocalVariableNamingConventions": 2,
      "CollapsibleIfStatements": 3,
      "ShortVariable": 123,
      "AssignmentInOperand": 5,
      "SimplifyBooleanReturns": 2,
      "InefficientStringBuffering": 5,
      "AvoidCatchingNPE": 5,
      "AddEmptyString": 3,
      "RedundantFieldInitializer": 6,
      "TestClassWithoutTestCases": 2,
      "AvoidInstantiatingObjectsInLoops": 2,
      "AvoidLiteralsInIfCondition": 17,
      "ConstructorCallsOverridableMethod": 1,
      "ConsecutiveLiteralAppends": 8,
      "AvoidThrowingNullPointerException": 3,
      "FieldNamingConventions": 2,
      "SimplifyBooleanExpressions": 6,
      "NullAssignment": 31,
      "EmptyCatchBlock": 11
    },
    "file_violation_stats": {
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharRange.java": {
        "violation_count": 9,
        "rules": [
          "UseStringBufferForStringAppends",
          "FieldNamingConventions",
          "MissingOverride",
          "ShortVariable"
        ],
        "unique_rules": 4
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSet.java": {
        "violation_count": 11,
        "rules": [
          "AvoidLiteralsInIfCondition",
          "ConstructorCallsOverridableMethod",
          "ImmutableField",
          "AvoidInstantiatingObjectsInLoops",
          "MissingOverride",
          "ShortVariable"
        ],
        "unique_rules": 6
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/CharSetUtils.java": {
        "violation_count": 6,
        "rules": [
          "CollapsibleIfStatements",
          "ShortVariable"
        ],
        "unique_rules": 2
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberRange.java": {
        "violation_count": 9,
        "rules": [
          "AvoidThrowingNullPointerException",
          "MissingOverride",
          "ShortVariable",
          "LogicInversion"
        ],
        "unique_rules": 4
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/NumberUtils.java": {
        "violation_count": 41,
        "rules": [
          "ShortVariable",
          "NcssCount",
          "CyclomaticComplexity",
          "EmptyCatchBlock",
          "NPathComplexity",
          "UnnecessaryFullyQualifiedName",
          "AvoidLiteralsInIfCondition",
          "AvoidReassigningParameters",
          "NullAssignment",
          "CollapsibleIfStatements",
          "TooManyMethods"
        ],
        "unique_rules": 11
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/ObjectUtils.java": {
        "violation_count": 3,
        "rules": [
          "ClassWithOnlyPrivateConstructorsShouldBeFinal",
          "SuspiciousEqualsMethodName",
          "SimplifyBooleanReturns"
        ],
        "unique_rules": 3
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/RandomStringUtils.java": {
        "violation_count": 9,
        "rules": [
          "CyclomaticComplexity",
          "AssignmentInOperand",
          "NPathComplexity",
          "AvoidFieldNameMatchingMethodName",
          "ClassWithOnlyPrivateConstructorsShouldBeFinal",
          "AvoidReassigningParameters",
          "ShortVariable"
        ],
        "unique_rules": 7
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/SerializationUtils.java": {
        "violation_count": 4,
        "rules": [
          "ClassWithOnlyPrivateConstructorsShouldBeFinal",
          "ShortVariable",
          "EmptyCatchBlock"
        ],
        "unique_rules": 3
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/StringUtils.java": {
        "violation_count": 101,
        "rules": [
          "CyclomaticComplexity",
          "UnusedLocalVariable",
          "InefficientEmptyStringCheck",
          "AvoidReassigningParameters",
          "OneDeclarationPerLine",
          "UseLocaleWithCaseConversions",
          "NcssCount",
          "ConsecutiveAppendsShouldReuse",
          "ClassWithOnlyPrivateConstructorsShouldBeFinal",
          "AvoidCatchingGenericException",
          "LocalVariableNamingConventions",
          "CollapsibleIfStatements",
          "ShortVariable",
          "AssignmentInOperand",
          "InefficientStringBuffering",
          "AvoidInstantiatingObjectsInLoops",
          "EmptyCatchBlock",
          "AvoidLiteralsInIfCondition",
          "ConsecutiveLiteralAppends",
          "FieldNamingConventions",
          "SimplifyBooleanExpressions",
          "TooManyMethods"
        ],
        "unique_rules": 22
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/Nestable.java": {
        "violation_count": 11,
        "rules": [
          "UnnecessaryModifier"
        ],
        "unique_rules": 1
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableDelegate.java": {
        "violation_count": 19,
        "rules": [
          "UnusedLocalVariable",
          "ForLoopCanBeForeach",
          "TooManyMethods",
          "AvoidReassigningParameters",
          "ImmutableField",
          "RedundantFieldInitializer",
          "NullAssignment",
          "ShortVariable"
        ],
        "unique_rules": 8
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableException.java": {
        "violation_count": 8,
        "rules": [
          "RedundantFieldInitializer",
          "MissingSerialVersionUID",
          "AvoidDeeplyNestedIfStmts",
          "MissingOverride"
        ],
        "unique_rules": 4
      },
      "/tmp/tmp7a0fn1y3/repo/src/java/org/apache/commons/lang/exception/NestableRuntimeException.java": {
        "violation_count": 8,
        "rules": [
          "RedundantFieldInitializer",
          "MissingSerialVersionUID",
          "AvoidDeeplyNestedIfStmts",
          "MissingOverride"
        ],
        "unique_rules": 4
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/CharSetUtilsTest.java": {
        "violation_count": 4,
        "rules": [
          "AvoidDuplicateLiterals"
        ],
        "unique_rules": 1
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/LangTestSuite.java": {
        "violation_count": 2,
        "rules": [
          "TestClassWithoutTestCases",
          "ClassNamingConventions"
        ],
        "unique_rules": 2
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/NumberUtilsTest.java": {
        "violation_count": 9,
        "rules": [
          "NcssCount",
          "SimplifyBooleanReturns",
          "AvoidCatchingNPE",
          "AvoidDuplicateLiterals",
          "AddEmptyString",
          "AvoidCatchingGenericException",
          "NullAssignment",
          "TooManyMethods"
        ],
        "unique_rules": 8
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/ObjectUtilsTest.java": {
        "violation_count": 1,
        "rules": [
          "ShortVariable"
        ],
        "unique_rules": 1
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/RandomStringUtilsTest.java": {
        "violation_count": 4,
        "rules": [
          "AvoidDuplicateLiterals",
          "NPathComplexity",
          "ShortVariable"
        ],
        "unique_rules": 3
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/SerializationUtilsTest.java": {
        "violation_count": 22,
        "rules": [
          "UnusedLocalVariable",
          "CompareObjectsWithEquals",
          "AvoidCatchingNPE",
          "AvoidDuplicateLiterals",
          "AvoidCatchingGenericException",
          "TooManyMethods"
        ],
        "unique_rules": 6
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsIsTest.java": {
        "violation_count": 4,
        "rules": [
          "AvoidDuplicateLiterals"
        ],
        "unique_rules": 1
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsSubstringTest.java": {
        "violation_count": 1,
        "rules": [
          "TooManyMethods"
        ],
        "unique_rules": 1
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTest.java": {
        "violation_count": 5,
        "rules": [
          "AvoidDuplicateLiterals",
          "UnusedPrivateField",
          "TooManyMethods"
        ],
        "unique_rules": 3
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java": {
        "violation_count": 6,
        "rules": [
          "AvoidDuplicateLiterals",
          "AddEmptyString",
          "ShortVariable"
        ],
        "unique_rules": 3
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java": {
        "violation_count": 2,
        "rules": [
          "TestClassWithoutTestCases",
          "ClassNamingConventions"
        ],
        "unique_rules": 2
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java": {
        "violation_count": 54,
        "rules": [
          "MissingSerialVersionUID",
          "UnusedLocalVariable",
          "TooManyMethods",
          "AvoidDuplicateLiterals",
          "ImmutableField",
          "MissingOverride",
          "RedundantFieldInitializer",
          "NullAssignment",
          "ShortVariable"
        ],
        "unique_rules": 9
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java": {
        "violation_count": 35,
        "rules": [
          "UnusedLocalVariable",
          "TooManyMethods",
          "AvoidDuplicateLiterals",
          "CloseResource",
          "NullAssignment",
          "ShortVariable"
        ],
        "unique_rules": 6
      },
      "/tmp/tmp7a0fn1y3/repo/src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java": {
        "violation_count": 35,
        "rules": [
          "UnusedLocalVariable",
          "TooManyMethods",
          "AvoidDuplicateLiterals",
          "CloseResource",
          "NullAssignment",
          "ShortVariable"
        ],
        "unique_rules": 6
      }
    }
  },
  "processed_at": "2025-07-19T13:41:09.869644"
}